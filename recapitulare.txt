1.1 General: Using argv
1.1 General: Joining elements of a list with a special character
1.1 General: Getting an item from a dictionary without the program yelling at us if it doesn't exist
1.1 General: Create 2 classes (inheritance)
1.1 General: Create and and delete one folder
1.1 General: Display all .txt files from one folder
1.1 General: Use super from classes
1.1 General: Round 234.214 as : 230.0 and 234.21
1.1 General: Print 'a','b','c' separated by #
1.1 General: Print (5, 5) as 0005 5.00000
1.1 General: Print (#, 8) as ___#________*
1.1 General: Print 1____10 2___100 3__1000 4_10000
1.1 General: Print with % (string and digit)
1.1 General: Use enumerate function
1.1 General: Use zip function
1.1 General: Create a function with args and kwargs
1.1 General: Use map
1.1 General: Use filter
1.1 General: Use lambda
1.1 General: Use polymorphism
1.1 General: Create a class with dunder __str__, __len__, __del__ 
1.1 General: Use __name__ __ main__ functions
1.1 General: Run a UNITTEST
1.1 General: Create a decorator (logging in)
1.1 General: Create a generator
1.1 General: Make a string iterable
1.1 General: Use pdb module to debug
1.1 General: Do one thing two ways and time it
1.1 General: Write a number as binary, hexa, and octa
1.1 General: Print all the different elements between two sets
1.1 General: Print all common elements between two sets
1.1 General: Create a comprehensive dictionary
1.1 General: Print the orders of A, F and z characters
1.1 General: Create a comprehensive dictionary
1.1 General: Use else statement with while
1.1 General: Print a number as 3e2
1.1 General: Write CMMDC algorithm
1.1 General: Write prime numbers algorithm ( one liner ! )
1.1 General: Use any and all with sets
1.1 General: Unpack 7 values but use only the 3 values from the middle
1.1 General: Create __add__ and __mul__ functions
1.1 General: Create __gt__ and __lt__  and __eq__ functions
1.1 General: Add two dictionaries
1.1 General: One liner generator
1.1 General: Sort 2 objects
1.1 General: Open big files in chunks
1.2 Pandas: Create a series from a list
1.2 Pandas: Create a series from a list and change the indexing to a, b, c, d
1.2 Pandas: Create a dataframe from a list
1.2 Pandas: Create a dataframe from a dictionary
1.2 Pandas: Create a dataframe from a series
1.2 Pandas: Create a dataframe from a 1.3 Numpy array
1.2 Pandas: Join two dataframes
1.2 Pandas: Merge two dataframes
1.2 Pandas: Concatenate two dataframes
1.2 Pandas: Read a .csv file, print it's tail, head and shape
1.2 Pandas: Read a .csv file, print the mean/min/max/median/std
1.2 Pandas: Read a .csv file, print it's columns
1.2 Pandas: Read a .csv file, view one single column 2 ways
1.2 Pandas: Read a .csv file, view 3 columns
1.2 Pandas: Read a .csv file, view particular rows
1.2 Pandas: Read a .csv file, view one particular cell
1.2 Pandas: Read a .csv file, rename one column
1.2 Pandas: Read a .csv file, fill the NA cells with one value
1.2 Pandas: Read a .csv file, delete one column
1.2 Pandas: Read a .csv file, make correlations between 3 columns
1.2 Pandas: Read a .csv file, convert the type of one column
1.2 Pandas: Read a .csv file, iterate through rows
1.2 Pandas: Read a .csv file, filter by one column name
1.2 Pandas: Read a .csv file, use loc and iloc
1.2 Pandas: Read a .csv file, create a column
1.2 Pandas: Read a .csv file, create a column with lambda function
1.2 Pandas: Read a .csv file, sort 2 columns
1.2 Pandas: Read a .csv file, use multiple filtering
1.2 Pandas: Read a .csv file, use multiple filtering using REGEX
1.2 Pandas: Read a .csv file, save the new csv
1.2 Pandas: Read a .csv file, reset the index ( 2 ways, inplace)
1.2 Pandas: Read a .csv file, change the value of on column ( napoli -> steaua)
1.2 Pandas: Read a .csv file, group the elements by one column, sorted by another column, mean values
1.2 Pandas: Read a .csv file, create a new column which counts the types
1.2 Pandas: Read a .csv file in chunks (iterative)
1.3 Numpy: Create an array, print it's dimentsion, itemsize, type, size, shape
1.3 Numpy: Create an array, reshape it, slice it ( print only the middle)
1.3 Numpy: Create an array, using an interval and  [0, 10] and print 6 values between 
1.3 Numpy: Create an array and print it's max and sum ( total sum, sum for two axis)
1.3 Numpy: Create an array and print it's square root, standard deviation
1.3 Numpy: Create 2 arrays and stack them h and v ( 3 methods)
1.3 Numpy: Create an 2x3 array and make it all by one row
1.3 Numpy: Create an array and print it's exponential and logaritmic values
1.3 Numpy: Create an array and filter it's odd values
1.3 Numpy: Create an array and use Tile
1.3 Numpy: Print the common and the different elements between 2 arrays
1.3 Numpy: Create an array and use where
1.3 Numpy: Create a function which takes x and y and makes it x*3+y*2 and apply it on two arrays
1.3 Numpy: Create an array and swap it's collumns and rows
1.3 Numpy: Create an array and reverse it's collumns and rows
1.6 SQLite3: Create a database, a table and the columns
1.6 SQLite3: Use SELECT, INSERT, DELETE and UPDATE
1.7 Collections: Create a dictionary with letters count
1.7 Collections: Create a default dictionary
1.7 Collections: Create an ordered dictionary
1.7 Collections: Create a named tuple
1.7 Datetime: Create a date, get today's date
1.7 Datetime: Print the date like: My bday is on April 19, 1994
1.7 OS: Change directory, remove one directory, use walk to print all the files
1.7 Random: Print a random value between 15 and 19
1.7 Random: Roulette: black has 18, red has 18, green has 2, print 5 trials
1.7 Regex: Search for begining and end of a word character
1.7 Regex: Search for digits, characters
2. SQL Order some elements from a table and print distinct rows
2. SQL Make multiple filtering using LIKE
2. SQL Create REGEXP function and use it
2. SQL Select rows when a collumn is null
2. SQL Multiple ordering
2. SQL Make operations on and use AS
2. SQL Use SELECT and show only 7 values, skiping the first 5
2. SQL Join 2 tables
2. SQL Make a subquery using IN
2. SQL Copy a table
2. SQL Insert multiple records in a table
2. SQL Make a cross join
2. SQL Make a union of querries
2. SQL Make a natural join
2. SQL Join 2 table with same column using 'using'
2. SQL Make an outer join
2. SQL Join 3 tables
6. GIT: Initialize a local git repository
6. GIT: Add files to the index (two ways to add all the files)
6. GIT: Remove an added file from the index
6. GIT: Commit without edditing the comment
6. GIT: Push to a remote repository
6. GIT: Pull from a repository
6. GIT: Clone a repository
6. GIT: Create a ignoring file and check if it works
6. GIT: Create and switch to another branch, then merge them
6. GIT: How to escape from editing comment
8. LINUX: Make a directory
8. LINUX: Make a directory in a particular destination
8. LINUX: Make multiple directories
8. LINUX: Remove a directory
8. LINUX: Change the directory
8. LINUX: Change the directory, go back
8. LINUX: Change the directory, go previous
8. LINUX: Change the directory, go to the root directory
8. LINUX: List the files in directory
8. LINUX: List all the files in subdirectories
8. LINUX: Checks the permissions
8. LINUX: Print working directory
8. LINUX: Copy a file in the same directory
8. LINUX: Copy a file in another directory
8. LINUX: Remove a file
8. LINUX: Remove a folder with a file inside
8. LINUX: Create a file using cat
8. LINUX: Concatenate to a file using cat
8. LINUX: View a file using cat
8. LINUX: Move a file
8. LINUX: Rename a file
8. LINUX: Checks the connection with a url
8. LINUX: See content of a file in real time
8. LINUX: See last 100 lines
8. LINUX: List all processes
8. LINUX: List all processes page by page
8. LINUX: Show the network status
8. LINUX: Network connections and status of sockets
8. LINUX: List the opened files
8. LINUX: Show the free space
8. LINUX: Show how much space uses some files
8. LINUX: Give the execution right (two ways)
8. LINUX: Show history
8. LINUX: Redo a command using numbers from history
8. LINUX: Check the internet connectivity
8. LINUX: Find a file in a directory
8. LINUX: Check network interface
8. LINUX: Restart your pc
8. LINUX: Show all users currently on the server
8. LINUX: Making shortcuts using alias
8. LINUX: Locate a file
8. LINUX: Write to a file using echo
